@model EstimateShippingModel
@using Nop.Web.Models.ShoppingCart;
@if (Model.Enabled)
{


   using (Html.BeginRouteForm("ShoppingCart", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
       
         @Html.AntiForgeryToken()
        <div class="shipping">
         <script type="text/javascript">
            $(function() {
                $("#@Html.FieldIdFor(model => model.CountryId)").change(function() {
                    var selectedItem = $(this).val();
                    var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                    var estimateProgress = $("#estimate-shipping-loading-progress");
                    estimateProgress.show();
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                        data: { "countryId": selectedItem, "addSelectStateItem": "false" },
                        success: function(data) {
                            ddlStates.html('');
                            $.each(data, function(id, option) {
                                ddlStates.append($('<option></option>').val(option.id).html(option.name));
                            });
                            estimateProgress.hide();
                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                            alert('Failed to retrieve states.');
                            estimateProgress.hide();
                        }
                    });
                });
            });
        </script>

            <div class="panel panel-default">
            <div class="panel-heading">
                <h1>@T("ShoppingCart.EstimateShipping")</h1>
            </div>
            <div class="panel-body">
               
                <div class="estimate-shipping">
                    @*<div class="hint">@T("ShoppingCart.EstimateShipping.Tooltip")</div>*@

                    <div class="form-group">
                        @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates, new { @class = "form-control" })
                        <span id="estimate-shipping-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                    </div>

                    <div class="form-group">
                        @Html.TextBoxFor(model => model.ZipPostalCode, new { @class = "form-control", placeholder = "Zip code" })
                    </div>
                    <div class="form-group">
                        <div class="buttons">
                            <input type="submit" name="estimateshipping" value="@T("ShoppingCart.EstimateShipping.Button")" class="btn btn-default" />
                        </div>
                    </div>


                    @if (Model.ShippingOptions.Count > 0)
                    {
                        <ul class="shipping-results list-unstyled">
                            @foreach (var shippingOption in Model.ShippingOptions)
                            {
                                <li class="shipping-option-item">
                                    <span class="option-name">
                                        @string.Format("{0} via {1}", shippingOption.Price, shippingOption.Name)
                                        @*@T("ShoppingCart.EstimateShipping.ShippingOptionWithRate", shippingOption.Name, shippingOption.Price)*@
                                    </span>
                                    @*<span class="option-description">
                                        @Html.Raw(shippingOption.Description)
                                    </span>*@
                                </li>
                            }
                        </ul>
                    }
                    else if (Model.Warnings.Count > 0)
                    {
                        <div class="message-error">
                            <ul>
                                @foreach (var error in Model.Warnings)
                                {
                                    <li>@error</li>
                                }
                            </ul>
                        </div>
                    }
                    
                    <br /><br />
                </div>

            </div>
        </div>

      
    </div>

}

}