
@model MiniShoppingCartModel
@using Nop.Web.Models.ShoppingCart;


    <div class="byob-cart" id="byobcart">
        <div class="arrow-up"></div>
        <div class="p-4">
            <div id="collapseBYOBStep" name="collapseBYOBStep"></div>

            @* @if (Model.TotalProducts == 0)
            {
                @T("ShoppingCart.Mini.NoItems")
            }
            else
            {
                <div class="collapsed-cart">
                    <div class="byobcart__boxsize">

                        <div class="row">
                            <div class="col-7 col-md-8 col-lg-9">
                                @{
                                    var box = "Small Box";
                                    var progressbarwidth = (Model.TotalWeightFactor * 10);
                                    var progressbarwidthmobile = (Model.TotalWeightFactor * 35);

                                    if(progressbarwidth == 0)
                                    {
                                        progressbarwidth = 10;
                                        progressbarwidthmobile = 35;
                                    }
                                    else if(progressbarwidth == 96)
                                    {
                                        progressbarwidth = 100;
                                    }

                                    if (Model.TotalWeightFactor > 5)
                                    {
                                        box = "Regular Box";
                                    }
                                    if (Model.TotalWeightFactor > 10)
                                    {
                                        box = "Large Box";
                                    }
                                }
                       
                                <div class="progress">
                                    <div 
                                        class="d-none d-md-block hidden-xs hidden-sm progress-bar bg-progress" 
                                        role="progressbar" 
                                        style="padding: 4px; width: @string.Format("{0}%", progressbarwidth)" 
                                        aria-valuenow="@progressbarwidth" 
                                        aria-valuemin="0" aria-valuemax="100">
                                        @box
                                    </div>
                                    <div 
                                        class="d-block d-md-none hidden-md hidden-xl progress-bar bg-progress font-byob-progress" 
                                        role="progressbar" 
                                        style="padding: 4px; width: @string.Format("{0}%", progressbarwidthmobile)" 
                                        aria-valuenow="@progressbarwidthmobile" 
                                        aria-valuemin="0" aria-valuemax="100"
                                    >
                                        @box
                                    </div>
                                </div>
                            </div>
                            <div class="col-5 col-md-4 col-lg-3">
                                <a href="~/byob/step3" class="btn btn-cart-byob font-byob-progress" style="width:100%;">Complete Your Box</a>
                            </div>
                        </div>
                    </div>
                    <div class="byobcart__list">
                        <div class="col-main-slim">
                            <h2>Your Box</h2>
                            <div style="border:solid 1px #fff; padding:5px;">
                                <table>

                                    @using (Html.BeginForm("DeleteBYOBItem", "ShoppingCart", FormMethod.Post, new { id = "form3", @class = "login-form" }))
                                    {
                                        foreach (var item in Model.Items)
                                        {
                                            <tr class="">
                                                <td style="width:40px;">@string.Format("{0}x", item.Quantity)</td>
                                                <td>@item.ProductName</td>
                                                <td style="width:25%;">@item.UnitPrice</td>
                                                <td style="width:25px;">
                                                    @if (!item.isBox)
                                                    {
                                                        <button type="submit" value="@string.Format("{0}",item.Id)" name="id" class="btn btn-link btn__link-byob"><i class="fa fa-trash-o" aria-hidden="true"></i></button>
                                                    }

                                                </td>
                                            </tr>
                                        }
                                        <tr>
                                            <td colspan="3">&nbsp;</td>
                                        </tr>
                                        <tr class="subtotal">
                                            <td></td>
                                            <td>Subtotal</td>
                                            <td>@Model.SubTotal</td>
                                            <td></td>
                                        </tr>
                                    }


                                    </table>
                            </div>

                        </div>
                    </div>

                    @if (Model.TotalProducts > 0)
                    {
                        <div class="items scroll-cart1">
                            @foreach (var item in Model.Items)
                            {
                                <div class="byobitem">
                                    <div class="text-left d-flex">
                                        <img class="img-fluid" alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            } *@
        </div>

    </div>

<script>
    $(document).ready(async function () {
        flyout_cart_byob = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
        let data_byob = await dataBYOB();

        if (!data_byob && flyout_cart_byob.TotalProducts > 0) {
            //create items from model
            let flyout_cart_byob_items = [];
            for (let i = 0 ; i < flyout_cart_byob.Items.length ; i++) {
                let flyout_cart_byob_item = flyout_cart_byob.Items[i];
                flyout_cart_byob_items.push({
                    Quantity: flyout_cart_byob_item.Quantity,
                    Name: flyout_cart_byob_item.ProductName,
                    PriceStr: flyout_cart_byob_item.UnitPrice,
                    Price: 0,
                    WeightFactor: 0,
                    Id: flyout_cart_byob_item.ProductId,
                    ImageUrl: flyout_cart_byob_item.Picture.ImageUrl
                })
            }
            let subtotal_product = stringToPrice(flyout_cart_byob.SubTotal);
            data_byob = {
                Box: null,
                items: flyout_cart_byob_items,
                flyout_cart: true,
                subtotal_product 
            }
        }
        else {
            data_byob.flyout_cart = false;
            data_byob.subtotal_product = 0;
        }
        bodyModal(data_byob);
    });
    
    function numberWithCommas(x) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    }
    
    function stringToPrice(string) {
        return string.replace('IDR ', '').replace(/\,/g, '');
    }

    function FetchAjaxFlyoutCart(type, url, data) {
        return new Promise(function(resolve, reject) {
            $.ajax({
                cache: false,
                type,
                url,
                data,
                dataType: 'json',
                success: function (data) {
                    resolve(data)
                },
                error: function (err) {
                    reject(err)
                }
            });
        });
    }
    
    async function deleteItems(id) {
        let arr = []
        let step2_items = await dataBYOB();

        for (let i = 0 ; i < step2_items.items.length ; i++) {
            let item = step2_items.items[i];
            if (item.Id != id) arr.push(item);
        }
        step2_items.items = arr;

        //ajax new product
        const all_products = localStorage.getItem('products');
        const step2 = localStorage.getItem('step2');
        const all_products_obj = localStorage.getItem('products_obj');
        
        var old_products_obj_parse = JSON.parse(all_products_obj);
        var old_products = JSON.parse(step2);
        var all_products_parse = JSON.parse(all_products);
        let combine_products = all_products_parse.filter(item => item != id);
        let products = old_products.filter(item => item != id);
        let old_products_obj = old_products_obj_parse.filter(item => item.id != id);

        localStorage.setItem('products_obj', JSON.stringify(old_products_obj));
        localStorage.setItem('products', JSON.stringify(combine_products));
        localStorage.setItem('step2', JSON.stringify(products));

        try {
            let body_delete = {id: id};
            await FetchAjaxFlyoutCart("POST", "/shoppingcart/DeleteBYOBProduct", body_delete);
        } catch (error) {
            console.log(error.message)
        }

        bodyModal(step2_items);
    }

    function bodyModal(data) {
        let box = "Small Box", 
            box_weight = 2, 
            progressbarwidth = 15, progressbarwidthmobile = 35;

        if (!data) {
            //combiine all product
            let str_no_items = `
                <span>You have no items in your shopping cart.</span>
            `;
            
            $('div[id=collapseBYOBStep][name=collapseBYOBStep]').html(str_no_items);
            return 0;
        }

        //find image horizontal
        let image_products = ``

        //create table
        let subtotal = 0;
        let table_box = `<table>`;

        //box
        if (data.Box) {
            box_weight = data.Box.WeightFactor;
            subtotal += data.Box.Price;
            image_products += `
                <div class="byobitem">
                    <div class="text-left d-flex">
                        <img class="img-fluid" alt="${data.Box.Name}" src="${data.Box.ImageUrl}" title="${data.Box.Name}" />
                    </div>
                </div>
            `;
            table_box += `
                <tr>
                    <td style="width:40px;">${data.Box.Quantity}</td>
                    <td>${data.Box.Name}</td>
                    <td style="width:25%;">${data.Box.PriceStr}</td>
                    <td style="width:25px;"></td>
                </tr>
            `;
        }

        //items
        if (data.items.length > 0) {
            for (let i = 0 ; i < data.items.length ; i++) {
                let item = data.items[i];
                let delete_button = ``;
                table_box += `
                    <tr>
                        <td style="width:40px;">${item.Quantity}</td>
                        <td>${item.Name}</td>
                        <td style="width:25%;">${item.PriceStr}</td>
                        <td style="width:25px;">
                            <button onclick='deleteItems(${item.Id})' name="id" class="btn btn-link btn__link-byob"><i class="fa fa-trash-o" aria-hidden="true"></i></button>
                        </td>
                    </tr>
                `;

                subtotal += item.Price;
                image_products += `
                    <div class="byobitem">
                        <div class="text-left d-flex">
                            <img class="img-fluid" alt="${item.Name}" src="${item.ImageUrl}" title="${item.Name}" />
                        </div>
                    </div>
                `
            }
        }
        
        if (data.flyout_cart) subtotal += parseInt(data.subtotal_product);
        if (subtotal > 0) subtotal = `IDR ${numberWithCommas(subtotal)}`;

        table_box += `
                <tr>
                    <td colspan="3">&nbsp;</td>
                </tr>
                <tr class="subtotal">
                    <td></td>
                    <td>Subtotal</td>
                    <td>${subtotal}</td>
                    <td></td>
                </tr>
            </table>
        `;

        //no product or box
        let no_product = ``;
        if (!data.Box && data.items.length == 0) no_product += `You have no items in your shopping cart.`

        //define weight factor
        if (data.flyout_cart) {
            box_weight = flyout_cart_byob.TotalWeightFactor ? flyout_cart_byob.TotalWeightFactor : box_weight;
        }
        else {
            if (data.items.length > 0) box_weight += data.items.reduce((n, {WeightFactor}) => n + WeightFactor, 0);
        }

        //define progress box
        progressbarwidth = Math.ceil(box_weight * 6.6) > progressbarwidth ? Math.ceil(box_weight * 6.6) : progressbarwidth;
        progressbarwidthmobile = Math.ceil(box_weight * 6.6) > progressbarwidthmobile ? Math.ceil(box_weight * 6.6) : progressbarwidthmobile ;

        if (box_weight >= 6 && box_weight <= 10) box = "Regular Box";
        else if ((box_weight >= 11 && box_weight <= 15) || box_weight > 15) box = "Large Box";

        if (progressbarwidth > 100) {
            progressbarwidth = 100;
            progressbarwidthmobile = 100;
        }

        //combiine all product
        let str = `
            ${no_product}
            <div class="collapsed-cart">
                <div class="byobcart__boxsize">
                    <div class="row">
                        <div class="col-7 col-md-8 col-lg-9">
                            <div class="progress">
                                <div 
                                    class="d-none d-md-block hidden-xs hidden-sm progress-bar bg-progress" 
                                    role="progressbar" 
                                    style="padding: 4px; width: ${progressbarwidth}%" 
                                    aria-valuenow="${progressbarwidth}" 
                                    aria-valuemin="0" aria-valuemax="100">
                                    ${box}
                                </div>
                                <div 
                                    class="d-block d-md-none hidden-md hidden-xl progress-bar bg-progress font-byob-progress" 
                                    role="progressbar" 
                                    style="padding: 4px; width: ${progressbarwidthmobile}%" 
                                    aria-valuenow="${progressbarwidthmobile}" 
                                    aria-valuemin="0" aria-valuemax="100"
                                >
                                    ${box}
                                </div>
                            </div>
                        </div>
                        <div class="col-5 col-md-4 col-lg-3">
                            <a href="/byob/step3" class="btn btn-cart-byob font-byob-progress" id="test-complete" style="width:100%;">Complete Your Box</a>
                        </div>
                    </div>
                </div>
                <div class="byobcart__list">
                    <div class="col-main-slim">
                        <h2>Your Box</h2>
                        <div style="border:solid 1px #fff; padding:5px;">
                            ${table_box}
                        </div>
                    </div>
                </div>

                <div class="items scroll-cart1">
                    ${image_products}
                </div>
            </div>                
        `;
        
        $('div[id=collapseBYOBStep][name=collapseBYOBStep]').html(str);
    }

    function bodyFlyCart(datas) {
        let products = [];
        for (let i = 0 ; i < datas.length ; i++) {
            let data = datas[i];

            //skip for box
            if (i == 0) continue;

            let product = `${data.qty}_${data.id}_`;
            let variant = data.variant != 0 ? data.variant : '';
            let variant_value = data.variant_value != 0 ? data.variant_value : '';
            product = `${data.qty}_${data.id}_${variant}_${variant_value}`
            products.push(product);
        }

        return products
    }

    function checkUnbalanceProduct() {
        const all_products_obj = localStorage.getItem('products_obj');
        const step2 = localStorage.getItem('step2');

        let step2_parse = JSON.parse(step2) || [];
        let all_products_obj_parses = JSON.parse(all_products_obj) || [];
        if (
            flyout_cart_byob.Items.length > 0 && 
            all_products_obj_parses.length > 0 && 
            step2_parse.length > 0
        ) {
            for (let i = 0 ; i < all_products_obj_parses.length ; i++) {
                let all_products_obj_parse = all_products_obj_parses[i];
                let item_model = flyout_cart_byob.Items.find(item => item.ProductId == all_products_obj_parse.id);
                if (!item_model) {
                    all_products_obj_parses = all_products_obj_parses.filter(item => item.id != all_products_obj_parse.id);
                    step2_parse = step2_parse.filter(item => item != all_products_obj_parse.id);
                }
                else {
                    if (item_model.Quantity != all_products_obj_parse.qty) {
                        all_products_obj_parse.qty = item_model.Quantity;
                    }
                }
            }

            localStorage.setItem("products_obj", JSON.stringify(all_products_obj_parses));
            localStorage.setItem("step2", JSON.stringify(step2_parse));
        }
    }

    async function dataBYOB() {
        let step2_items;
        let body = {
            box: localStorage.step1,
            products: []
        }

        await checkUnbalanceProduct();
        const all_products_obj = localStorage.getItem('products_obj');
        const step2 = localStorage.getItem('step2');
        let step2_parse = step2 ?  JSON.parse(step2) : [];
        if (step2_parse.length > 0) {
            let all_products_obj_parse = JSON.parse(all_products_obj);
            body.products = bodyFlyCart(all_products_obj_parse);
        }

        try {
            let response = await FetchAjaxFlyoutCart("POST", "/byob/fetchitems", body);
            if (response && response.Box) step2_items = response;

            return step2_items;
        } catch (error) {
            console.log(error.message)
        }
    }

</script>