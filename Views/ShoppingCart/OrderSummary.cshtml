
@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart;
@{
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();

}

<div class="order-summary-content" id="winkelmandje">
    <span id="cartqty" style="display:none;">@Model.Items.Count</span>
    @Html.Partial("_OrderReviewData", Model.OrderReviewData)

@if (Model.Items.Count > 0)
{
    if (Model.Warnings.Count > 0)
    {
        <div class="alert alert-danger square-box" id="pnlfailure">

            @foreach (var warning in Model.Warnings)
            {
                <div>@warning</div>
            }
        </div>
    }

    @*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
using (Ajax.BeginForm("UpdateItemInCart", "ShoppingCart", new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "POST",
    OnFailure = "reqfailed",
    LoadingElementId = "ajax-loader",
    UpdateTargetId = "winkelmandje",
    OnSuccess = "frmUpdateComplete"
}, new { enctype = "multipart/form-data", id = "form1" }))
{
    @Html.AntiForgeryToken()
    <img id="ajax-loader" src="~/Themes/v1/Content/images/ajax_loader_small.gif" style="display:none;" />
    @Html.Hidden("remove")


    <div id="bigCart" class="d-none d-sm-block">
        <div class="order-summary">
            <div class="order-summary-header">
                <div style="width:40%;"><p class="text-center order-summary-text">PRODUCT</p></div>
                <div style="width:20%;"><p class="text-center order-summary-text">PRICE</p></div>
                <div style="width:20%;"><p class="text-center order-summary-text">QUANTITY</p></div>
                <div style="width:20%;"><p class="text-center order-summary-text">TOTAL</p></div>
            </div>

            @foreach (var item in Model.Items)
            {
            <div class="order-summary-item">
                <div class="cart-column1">

                    @if (Model.ShowProductImages)
                            {
                        <div class="image">
                            <img src="@item.Picture.ImageUrl" />
                        </div>
                            }
                <div class="thumbnail-summary">
                    <span class="order-summary-text">

                        @if (Model.IsEditable && item.AllowItemEditing)
                        {

                            var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                            editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);

                            <a href="@editCartItemUrl" class="product-name" title="@item.ProductName">@item.ProductName</a>
                        }
                        else
                        {
                            <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                        }
                    </span>

                    @if (!string.IsNullOrWhiteSpace(item.AttributeInfo))
                    {

                        if (!item.isBYOB)
                        {
                            <span class="attributes text-font">@Html.Raw(item.AttributeInfo)</span>
                        }
                        else
                        {

                            <span class="attributes text-font byob_attr">@Html.Raw(item.BoxSize)</span>

                            if (!string.IsNullOrWhiteSpace(item.AttributeInfo))
                            {

                <div class="byob_attr">
                    <strong>Content</strong>
                   @{
                       var aryBoxItems = item.AttributeInfo.Split(';');
                       if (aryBoxItems != null)
                       {
                            <ul class="list_byob">
                                @foreach (var ary in aryBoxItems)
                                {
                                    if (!string.IsNullOrWhiteSpace(ary))
                                    {
                                        <li>@Html.Raw(ary)</li>
                                    }
                                }
                            </ul>
                           }
                       }
                </div>
                              
                            }

                            if (!string.IsNullOrWhiteSpace(item.Card))
                            {
                                if (item.Card.Contains('|'))
                                {
                                    var carddetails = item.Card.Split('|');
                                    if (carddetails != null)
                                    {
                                        <div class="byob_attr">
                                            @foreach (var c in carddetails)
                                            {
                                                @Html.Raw(c)
                                                <br />
                                            }
                                        </div>

                                    }


                                }

                            }

                            if (!string.IsNullOrWhiteSpace(item.Personalization))
                            {
                                <div class="byob_attr">@Html.Raw(item.Personalization)</div>
                            }

                        }

                    }


                    @*@if (Model.ShowSku)
        {
            <span class="sku-number">@item.Sku</span>
        }*@


                    @if (item.ProductManufacturers != null)
                    {
                        <span class="manufacturer" style="font-style:italic;">
                            @foreach (var brand in item.ProductManufacturers)
                            {
                                <a href="~/@brand.SeName">@brand.Name</a>
                            }
                        </span>
                    }



                    <div class="hidden-xs hidden-sm">
                        @if (Model.IsEditable)
                        {
                            <div class="cart-delete">
                                <a name="lnkremove" value="@item.Id" class="lnkremove" style="display:flex">
                                    <img src="~/Content/Images/cup.png" class="trash-icon" style="width:11px;" />
                                    <p class="order-summary-text" style="color:#000; margin-top:-3px;">Delete</p>
                                </a>

                            </div>
                        }
                    </div>

                    @if (item.Warnings.Count > 0)
                    {
                        <span class="text-danger">
                            @for (int i = 0; i < item.Warnings.Count; i++)
                            {
                                @item.Warnings[i]
                            }
                        </span>
                    }
                </div>
                </div>

                <div class="cart-column2">
                    <p class="order-summary-text">@item.UnitPrice</p>
                </div>
                <div class="cart-column3">


                    @if (Model.IsEditable)
                    {
                        if (item.isBYOB)
                        {
                            <span class="product-quantity">@item.Quantity</span>
                        }
                        else
                        {
                            <div class="pl-qty"><button type="submit" name="qtyMin" value="@item.Id" class="btn btn-line">-</button><button class="btn-line"><span>@item.Quantity</span></button><button type="submit" name="qtyPlus" value="@item.Id" class="btn btn-line">+</button></div>
                        }

                    }
                    else
                    {
                        <span class="product-quantity">@item.Quantity</span>}
                </div>
                <div class="cart-column4">
                    <p class="order-summary-text">


                        @if (item.isBYOB)
                        {
                            @item.UnitPrice
                        }
                        else
                        {
                            @item.SubTotal
                        }
                    </p>


                    @if (!String.IsNullOrEmpty(item.Discount))
                    {
                        <span class="discount">
                            @T("ShoppingCart.ItemYouSave") @item.Discount
                        </span>
                    }
                </div>
            </div>
            }
        </div>
    </div>

        <!--order summary mobile-->
        <div class="order-summary d-block d-sm-none">

            @foreach (var item in Model.Items)
            {

            <div class="order-summary-item-mobile">
                @if (Model.ShowProductImages)
                    {
                    <div class="cart-column1-mobile">
                        <div><img src="@item.Picture.ImageUrl" class="img-fluid" /></div>
                    </div>
                    }
                <div class="cart-column2-mobile">
                    <div>
                        <p>
                            @if (Model.IsEditable && item.AllowItemEditing)
                        {

                            var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                            editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);

                                <a href="@editCartItemUrl" class="product-name" title="@item.ProductName">@item.ProductName</a>
                                }
                                else
                                {
                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                                }
                        </p>
                        @if (!String.IsNullOrEmpty(item.Size))
                            {
                            <p>@Html.Raw(item.Size)</p>
                            }

                        <p>Qty: @item.Quantity</p>
                    </div>

                    @if (Model.IsEditable)
                        {
                        <div class="cart-delete">
                            <a name="lnkremove" value="@item.Id" class="lnkremove" style="display:flex">
                                <img src="~/Content/Images/cup.png" class="trash-icon" style="width:11px;" />
                                <p class="order-summary-text" style="color:#707070; margin-top:-6px;">Delete</p>
                            </a>

                        </div>
                        }

                </div>
                <div class="cart-column3-mobile">
                    <p>@item.UnitPrice</p>
                </div>
            </div>
            }


        </div>

        <!-- cart footer -->
        <div class="cart-footer">
            @Html.Action("OrderTotals", "ShoppingCart", new { isEditable = Model.IsEditable })
            @Html.Partial("_GiftCardDiscountBox", Model.DiscountBox)


            @if (Model.IsEditable)
            {
                if (!String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                {
                    <div class="min-amount-warning">@Model.MinOrderSubtotalWarning</div>
                }
            }

          
        </div>

    if (Model.IsEditable && Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
    {
        var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
        //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
        //of course, you can modify appropriate locales to include VAT info there
        <div class="tax-shipping-info">
            @T(inclTax ? "ShoppingCart.TaxShipping.InclTax" : "ShoppingCart.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
        </div>
    }


    if (Model.IsEditable)
    {
        if (Model.TermsOfServiceOnShoppingCartPage)
        {
        <br />
                    <div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display:none;">
                        <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                    </div>
                    <div class="terms-of-service">
                        <input id="termsofservice" type="checkbox" name="termsofservice" />
                        <span>@T("Checkout.TermsOfService.IAccept")<a class="read" onclick="javascript:OpenWindow('@Url.RouteUrl("TopicPopup", new { SystemName = "conditionsofuse" })', 450, 500, true)">@T("Checkout.TermsOfService.Read")</a></span>
                    </div>
                    <br />
        }
    }

    @*<div class="cart-options">
        @if (Model.IsEditable)
        {
            <table class="table-coupon">
                <tr>
                    <td>
                        @Html.Partial("_CheckoutAttributes", Model.CheckoutAttributes, new ViewDataDictionary())
                    </td>
                </tr>
            </table>
        }
        else
        {
            if (!String.IsNullOrEmpty(Model.CheckoutAttributeInfo))
            {
                <div class="selected-checkout-attributes">
                    @Html.Raw(Model.CheckoutAttributeInfo)
                </div>
            }
        }

        <br />

    </div>*@


    if (Model.IsEditable)
    {
        <div class="row">

            <div class="col-sm-6 checkout-margin-left">
                @*<p>Note:</p>
                <div>
                    <textarea class="textarea-note"></textarea>
                </div>
                <br />
                @Html.Partial("_GiftCardDiscountBox", Model.DiscountBox)*@
            </div>

            @*<div class="col-sm-6">
                    <table class="table text-right">
                        <colgroup>
                            <col style="width:70%" />
                            <col style="width:30%;" />
                        </colgroup>
                        <tr>
                            <td style="padding-right:15px;padding-top:0;">
                                @if (Model.IsEditable)
                                {
                                    <input type="submit" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="btn btn-default" />
                                }
                            </td>
                            <td style="padding-top:0;">
                                @if (String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                                {
                                    <script type="text/javascript">
                                        $(document).ready(function () {
                                            $('#checkout').click(function () {
                                                //terms of service
                                                var termOfServiceOk = true;
                                                if ($('#termsofservice').length > 0) {
                                                    //terms of service element exists
                                                    if (!$('#termsofservice').is(':checked')) {
                                                        $("#terms-of-service-warning-box").dialog();
                                                        termOfServiceOk = false;
                                                    } else {
                                                        termOfServiceOk = true;
                                                    }
                                                }
                                                return termOfServiceOk;
                                            });
                                        });
                                    </script>

                                    <button type="submit" id="checkout" name="checkout" value="checkout" class="btn btn-default">
                                        @T("Checkout.Button")
                                    </button>
                                }
                            </td>
                        </tr>
                    </table>
                </div>*@

            <div class="col-sm-6 checkout-margin mt-5">
                @if (Model.IsEditable)
                {
                    @*<button type="submit" id="continueshopping" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="btn btn-default">
                        Continue Shopping
                    </button>*@

                    <button type="submit" id="continueshopping" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="btn btn-inverse btn-block" style="width:100%;text-transform:uppercase">
                        Continue Shopping
                    </button>
                }
                <div class="">
                    @if (String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                    {
                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                $('#checkout').click(function () {
                                                    //terms of service
                                                    var termOfServiceOk = true;
                                                    if ($('#termsofservice').length > 0) {
                                                        //terms of service element exists
                                                        if (!$('#termsofservice').is(':checked')) {
                                                            $("#terms-of-service-warning-box").dialog();
                                                            termOfServiceOk = false;
                                                        } else {
                                                            termOfServiceOk = true;
                                                        }
                                                    }
                                                    return termOfServiceOk;
                                                });
                                            });
                        </script>

                                <button type="submit" id="checkout" name="checkout" 
                                        value="checkout" class="btn btn-default btn-block mt-3" 
                                        style="width:100%;text-transform:uppercase">Proceed to Checkout</button>
                    }
                </div>

            </div>
        </div>
    }
    
    }

    
    }
    else
        {
    <div class="no-data text-center">
        @T("ShoppingCart.CartIsEmpty")
    </div>
}

    <!--order summary mobile-->
    @*<div class="order-summary d-block d-sm-none">
        <div class="order-summary-item-mobile">
            <div class="cart-column1-mobile">
                <div><img src="~/Content/Images/cart.png" /></div>
            </div>
            <div class="cart-column2-mobile">
                <div>
                    <p>TOPSTICHED SHIRT</p>
                    <p>SIZE : L</p>
                    <p>2</p>
                </div>
                <div class="cart-delete">
                    <img src="~/Content/Images/cup.png" class="trash-icon" width="96.25px;" />
                    <p style="color:#707070">Delete</p>
                </div>
            </div>
            <div class="cart-column3-mobile">
                <p>IDR 329,000</p>
            </div>
        </div>
        <div class="order-summary-item-mobile">
            <div class="cart-column1-mobile">
                <div><img src="~/Content/Images/cart.png" /></div>
            </div>
            <div class="cart-column2-mobile">
                <div>
                    <p>TOPSTICHED SHIRT</p>
                    <p>SIZE : L</p>
                    <p>2</p>
                </div>
                <div class="cart-delete">
                    <img src="~/Content/Images/cup.png" class="trash-icon" width="96.25px;" />
                    <p style="color:#707070">Delete</p>
                </div>
            </div>
            <div class="cart-column3-mobile">
                <p>IDR 329,000</p>
            </div>
        </div>
    </div>*@


</div>
<br />
  @*<div style="display:flex;flex-direction:column; align-items:center; justify-content:center;">
          <label class="container-checkbox" style="font-size:14px;color:#000;">
              I agree with the terms of service and I adhere to them unconditionally
              <input type="checkbox">
              <span class="checkmark"></span>
          </label>
          <br /><button class="button_kivee btn-cart">CONTINUE</button>
      </div>*@
<script>
    $('.add').click(function () {
        if ($(this).prev().val() < 9) {
            $(this).prev().val(+$(this).prev().val() + 1);
        }
    });
    $('.sub').click(function () {
        if ($(this).next().val() > 1) {
            if ($(this).next().val() > 1) $(this).next().val(+$(this).next().val() - 1);
        }
    });
</script>



<script>
    jQuery(document).ready(function () {
        // This button will increment the value
        $('.qtyplus').click(function (e) {
            // Stop acting like a button
            e.preventDefault();
            // Get the field name
            fieldName = $(this).attr('field');
            // Get its current value
            var currentVal = parseInt($('input[name=' + fieldName + ']').val());
            // If is not undefined
            if (!isNaN(currentVal)) {
                // Increment
                $('input[name=' + fieldName + ']').val(currentVal + 1);
            } else {
                // Otherwise put a 0 there
                $('input[name=' + fieldName + ']').val(0);
            }
        });
        // This button will decrement the value till 0
        $(".qtyminus").click(function (e) {
            // Stop acting like a button
            e.preventDefault();
            // Get the field name
            fieldName = $(this).attr('field');
            // Get its current value
            var currentVal = parseInt($('input[name=' + fieldName + ']').val());
            // If it isn't undefined or its greater than 0
            if (!isNaN(currentVal) && currentVal > 0) {
                // Decrement one
                $('input[name=' + fieldName + ']').val(currentVal - 1);
            } else {
                // Otherwise put a 0 there
                $('input[name=' + fieldName + ']').val(0);
            }
        });

    });

    $(".lnkremove").click(function (e) {
        var r = $(this).attr("value");
        $("#remove").val(r);
        $("#form1").submit();
        return false;
    });
</script>
