@model ChangePasswordModel
@using Nop.Web.Models.Customer;
@{

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //ViewBag.HideMenu = "true";
    //ViewBag.HideDesktopMenu = "true";
}
@section left
{
    @*@Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.ChangePassword })*@
}


@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
  
    <div class="container" style="margin-top:120px;">
         <div class="account__change__password">
            <h1>CHANGE PASSWORD</h1>
            <p>You can change your password here.</p>
        </div>
         <div class="form-password">
             <input type="password" id="psw" name="psw" placeholder="Password" class="input-cart" />
             <input type="password" id="psw" name="psw" placeholder="New Password" class="input-cart" />
             <input type="password" id="psw" name="psw" placeholder="Confirm New Password" class="input-cart" />
             <div class="buttons">
                 <button class="button_kivee button_kivee-account">SAVE CHANGES</button>
             </div>
         </div>     
             
    </div>
}*@



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="col-main">
        <div class="col-main-slim mt-5">


            @*@Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.ChangePassword, isMobile = true })*@

            <h1>@T("Account.ChangePassword")</h1>
            @if (!String.IsNullOrEmpty(Model.Result))
            {
                <div class="result">
                    @Model.Result
                </div>
            }
            @{
                var validationSummary = Html.ValidationSummary(true);
            }
            @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
            {
                <div class="message-error">@validationSummary</div>
            }

            <div class="fieldset">

                <div class="form-group">
                    @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Current password" } })
                    @Html.ValidationMessageFor(m => m.OldPassword)
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus", placeholder = "New password" } })
                    @Html.ValidationMessageFor(m => m.NewPassword)
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm new password" } })
                    @Html.ValidationMessageFor(m => m.ConfirmNewPassword)
                </div>
                <div class="form-group">
                    <div class="buttons">
                        <input class="btn btn-default" type="submit" value="@T("Account.ChangePassword.Button")" />
                    </div>
                </div>
            </div>

        </div>


    </div>
                }
