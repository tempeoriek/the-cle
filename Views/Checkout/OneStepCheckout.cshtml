@using Nop.Web.Models.Checkout;
@model FlittsCheckoutModel

@{

    ViewBag.Title = "Checkout";
    ViewBag.HideMenu = "true";
}


<div class="col-main mt-large">
    <div class="row">
        <div class="col-xs-12 text-center">
            <h1>@ViewBag.Title</h1>
        </div>
    </div>

    @*@Html.Action("OrderSummary", "ShoppingCart")
    <br />*@
    @using (Html.BeginForm())
    {

        <div class="row">
            <div class="col-sm-6">
                <!-- billing -->
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h3>@T("Checkout.BillingAddress")</h3>
                    </div>
                    <div class="panel-body">
                        <div class="checkout-blox">
                            @if (Model.BillingAdress != null)
                                {
                                    {
                                        if (Model.BillingAdress.ExistingAddresses.Count > 0)
                                        {
                                            var isChecked = true;
                                            foreach (var item in Model.BillingAdress.ExistingAddresses)
                                            {
                                                var bAddress = string.Format("{0} {1}<br/>{2} {3}<br/>{4} {5}, {7}<br/>{6}", item.FirstName, item.LastName, item.Address1, item.Address2, item.City, item.ZipPostalCode, item.CountryName, item.StateProvinceName);
                                                <div class="radio">
                                                    <label>
                                                        @Html.RadioButton("BillingAdres", item.Id.ToString(), isChecked) @Html.Raw(bAddress)
                                                    </label>
                                                </div>
                                                isChecked = false;

                                            }
                                        }

                                    }
                                }
                            

                            <div class="radio">
                                <label>
                                    @Html.RadioButton("BillingAdres", "-1") New address
                                </label>

                            </div>
                            <div id="billing-new-address-form" class="enter-address-body" style="display:none;">

                                @{ var billingDictAddress = new ViewDataDictionary();
                                 //Merge ModelState (required for validation)
                                 billingDictAddress.ModelState.Merge(ViewData.ModelState);
                                 billingDictAddress.TemplateInfo.HtmlFieldPrefix = "BillingNewAddress";

                                @Html.Partial("_CreateOrUpdateAddress", Model.BillingAdress.NewAddress, billingDictAddress)

                                }
                            </div>

                        </div>
                    </div>
                </div>


            </div>
            <!-- end billing -->

            <div class="col-sm-6">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h3>@T("Checkout.ShippingAddress")</h3>
                    </div>
                    <div class="panel-body">

                        <!-- shipping -->
                        <div class="checkout-blox">

                            @{
        if (Model.ShippingAddress != null)
        {

            if (Model.ShippingAddress.ExistingAddresses.Count > 0)
            {
                var isChecked = true;
                foreach (var item in Model.ShippingAddress.ExistingAddresses)
                {

                    var bAddress = string.Format("{0} {1}<br/>{2} {3}<br/>{4} {5}, {7}<br/>{6}", item.FirstName, item.LastName, item.Address1, item.Address2, item.City, item.ZipPostalCode, item.CountryName, item.StateProvinceName);
                    <div class="radio">
                        <label>
                            @Html.RadioButton("ShippingAdres", item.Id.ToString(), isChecked) @Html.Raw(bAddress)
                        </label>

                    </div>
                    isChecked = false;
                }
            }
        }


                            }
                            <div class="radio">
                                <label>
                                    @Html.RadioButton("ShippingAdres", "-1") New address
                                </label>

                            </div>

                            <div id="shipping-new-address-form" style="display:none;">
                                @{
                                    var validationSummary = Html.ValidationSummary(true);

                                    if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                                    {
                                        <div class="message-error">@validationSummary</div>
                                    }


                                    var dataDictAddress = new ViewDataDictionary();
                                    //Merge ModelState (required for validation)

                                    dataDictAddress.ModelState.Merge(ViewData.ModelState);
                                    dataDictAddress.TemplateInfo.HtmlFieldPrefix = "ShippingNewAddress";

                                    @Html.Partial("_CreateOrUpdateAddress", Model.ShippingAddress.NewAddress, dataDictAddress)
                                }
                            </div>
                            <!-- end shipping adres -->
                        </div>

                    </div>
                </div>





            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">

                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h3>@T("Checkout.SelectShippingMethod")</h3>
                    </div>
                    <div class="panel-body">

                        <div class="checkout-blox">
                            <!-- shipping method-->
                            @if (Model.ShippingMethod.ShippingMethods.Count > 0)
                            {
                                <div class="shipping-options">

                                    @for (int i = 0; i < Model.ShippingMethod.ShippingMethods.Count; i++)
                                    {
                                        var shippingMethod = Model.ShippingMethod.ShippingMethods[i];

                                        <div class="radio">
                                            <label>
                                                <input id="shippingoption_@(i)" type="radio" name="shippingoption" value="@(shippingMethod.Name)___@(shippingMethod.ShippingRateComputationMethodSystemName)" checked="@shippingMethod.Selected" />
                                                @*@T("Checkout.SelectShippingMethod.MethodAndFee", shippingMethod.Name, shippingMethod.Fee)*@
                                                @Html.Raw(shippingMethod.Name)

                                                @*@if (!String.IsNullOrEmpty(shippingMethod.Description))
                                                {
                                                    <span class="method-description">
                                                        @Html.Raw(shippingMethod.Description)
                                                    </span>

                                                }*@
                                            </label>
                                        </div>
                                    }
                                </div>
                            }

                            <br />
                            Shipment fee will be calculated on the next page.
                            <br /><br />

                           
                        </div><!-- end shipping method-->


                    </div>
                </div>

            </div>
            <div class="col-sm-6">
                <div class="panel panel-info" style="margin-bottom:0;">
                    <div class="panel-heading">
                        <h3>@T("Checkout.SelectPaymentMethod")</h3>
                    </div>
                    <div class="panel-body">

                        <div class="checkout-blox">
                            <!-- payment method-->
                            @*@if (Model.PaymentMethod.DisplayRewardPoints && Model.PaymentMethod.PaymentMethods.Count > 0)
                                {
                                    <div class="use-reward-points">
                                        @Html.EditorFor(model => Model.PaymentMethod.UseRewardPoints)
                                        @string.Format(T("Checkout.UseRewardPoints").Text, Model.PaymentMethod.RewardPointsBalance, Model.PaymentMethod.RewardPointsAmount)
                                    </div>
                                }*@

                            @if (Model.PaymentMethod.PaymentMethods.Count > 0)
                            {

                                <div class="method-lists">
                                    @for (int i = 0; i < Model.PaymentMethod.PaymentMethods.Count; i++)
                                    {
                                        var paymentMethod = Model.PaymentMethod.PaymentMethods[i];
                                        var paymentMethodName = paymentMethod.Name;
                                        if (!String.IsNullOrEmpty(paymentMethod.Fee))
                                        {
                                            paymentMethodName = T("Checkout.SelectPaymentMethod.MethodAndFee", paymentMethodName, paymentMethod.Fee).Text;
                                        }


                                        <div class="radio">
                                            <label>
                                                <input id="paymentmethod_@(i)" type="radio" name="paymentmethod" value="@(paymentMethod.PaymentMethodSystemName)" checked="@paymentMethod.Selected" /> @paymentMethodName
                                                @*@if (!String.IsNullOrEmpty(paymentMethod.LogoUrl))
                                                {
                                                    <img src="@paymentMethod.LogoUrl" alt="@paymentMethodName" style="width:35px; margin-left:5px;" />
                                                }*@

                                            </label>
                                        </div>
                                    }
                                </div>

                            }
                            else
                            {
                                <div class="message-error">
                                    @T("Checkout.NoPaymentMethods")
                                </div>
                            }

                            @*<p>
                                You will enter your payment details on a secure payment page when you click on "Proceed to payment".
                               
                            </p>*@

                            <!-- end payment method -->

                        </div>


                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            @*<div class="col-sm-6">
                    <div class="panel panel-info">
                        <div class="panel-heading">
                        </div>
                        <div class="panel-body">
                        </div>
                    </div>

                </div>*@

            <div class="col-sm-12">


                <div class="panel panel-info">
                    <div class="panel-heading">
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="buttons text-right">
                                <input type="submit" id="confirm-button" name="confirm-button" value="Review order" class="btn btn-default btn-primary quarter-width" />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </div>
                        </div>



                    </div>
                </div>

            </div>




        </div>

    }

</div>


@section Left{
    @*@Html.Partial("MenuStatic")*@
}


@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")


    <script>
        $.validator.setDefaults({
            ignore: ":hidden"
        });

        $(function () {

            $("input[name='BillingAdres']").change(function () {
                var sp = $(this).val();
                if (sp < 0)
                    $('#billing-new-address-form').slideToggle();
                else {
                    $('#billing-new-address-form').css('display', 'none');

                    $("#BillingNewAddress_FirstName").val('');
                    $("#BillingNewAddress_LastName").val('');
                    $("#BillingNewAddress_Email").val('');
                    $("#BillingNewAddress_Address1").val('');
                    $("#BillingNewAddress_Address2").val('');
                    $("#BillingNewAddress_City").val('');
                    $("#BillingNewAddress_ZipPostalCode").val('');
                    $("#BillingNewAddress_PhoneNumber").val('');

                    $("#BillingNewAddress_FirstName").attr("data-val", "false");
                    $("#BillingNewAddress_LastName").attr("data-val", "false");
                    $("#BillingNewAddress_Email").attr("data-val", "false");
                    $("#BillingNewAddress_Address1").attr("data-val", "false");
                    $("#BillingNewAddress_Address2").attr("data-val", "false");
                    $("#BillingNewAddress_City").attr("data-val", "false");
                    $("#BillingNewAddress_ZipPostalCode").attr("data-val", "false");
                    $("#BillingNewAddress_PhoneNumber").attr("data-val", "false");
                }

            });

            $("input[name='ShippingAdres']").change(function () {
                var sp = $(this).val();
                if (sp < 0) {
                    $('#shipping-new-address-form').slideToggle();
                }
                else {
                    $('#shipping-new-address-form').css('display', 'none');

                    $("#ShippingNewAddress_FirstName").val('');
                    $("#ShippingNewAddress_LastName").val('');
                    $("#ShippingNewAddress_Email").val('');
                    $("#ShippingNewAddress_Address1").val('');
                    $("#ShippingNewAddress_Address2").val('');
                    $("#ShippingNewAddress_City").val('');
                    $("#ShippingNewAddress_ZipPostalCode").val('');
                    $("#ShippingNewAddress_PhoneNumber").val('');

                    $("#ShippingNewAddress_FirstName").attr("data-val", "false");
                    $("#ShippingNewAddress_LastName").attr("data-val", "false");
                    $("#ShippingNewAddress_Email").attr("data-val", "false");
                    $("#ShippingNewAddress_Address1").attr("data-val", "false");
                    $("#ShippingNewAddress_Address2").attr("data-val", "false");
                    $("#ShippingNewAddress_City").attr("data-val", "false");
                    $("#ShippingNewAddress_ZipPostalCode").attr("data-val", "false");
                    $("#ShippingNewAddress_PhoneNumber").attr("data-val", "false");

                }

            });

        });

    </script>


    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    <script>
        function reqfailed() {
            $("#pnlfailure").html("Sorry, an error occured.");
        }

        function frmUpdateComplete(data, status, xhr) {
            if (typeof data.uri != "undefined")
                window.location = data.uri;

            if ($('#cartqty').html() != "undefined") {
                var q = ($('#cartqty').html());

                if (q > 0) {
                    $('.cart-qty').html(q);
                }
                else {
                    var width = $(window).width(), height = $(window).height();
                    if ((width >= 1080)) {
                        $('.cart-qty').html('0');
                    }
                    else {
                        $('.cart-qty').empty();
                    }
                }

            }
        }
    </script>



    <script>

        @*function Action(inpt) {
            if (inpt != "") {

                $.ajax({
                    url: '@Url.Action("GetAddressById", "Checkout")',
                    type: "POST",
                    data: { "addressId": inpt },
                    "success": function (data) {
                        if (data != null) {
                            var vdata = data;

                            $("#BillingNewAddress_FirstName").val(vdata.FirstName);
                            $("#BillingNewAddress_LastName").val(vdata.LastName);
                            $("#BillingNewAddress_Email").val(vdata.Email);
                            $("#BillingNewAddress_Address1").val(vdata.Address1);
                            $("#BillingNewAddress_Address2").val(vdata.Address2);
                            $("#BillingNewAddress_City").val(vdata.City);
                            $("#BillingNewAddress_ZipPostalCode").val(vdata.ZipPostalCode);
                            $("#BillingNewAddress_PhoneNumber").val(vdata.PhoneNumber);
                            $("#BillingNewAddress_CountryId").val(vdata.CountryId);

                            if (vdata.StateProvinceId != null)
                                $("#BillingNewAddress_StateProvinceId").val(vdata.StateProvinceId);
                        }
                    }
                });
            }
        }

        function VerzendAction(inpt) {
            if (inpt != "") {

                if (inpt == "0") {
                    //ship to billing address
                    $("#ShippingNewAddress_FirstName").val($("#BillingNewAddress_FirstName").val());
                    $("#ShippingNewAddress_LastName").val($("#BillingNewAddress_LastName").val());
                    $("#ShippingNewAddress_Email").val($("#BillingNewAddress_Email").val());
                    $("#ShippingNewAddress_Address1").val($("#BillingNewAddress_Address1").val());
                    $("#ShippingNewAddress_Address2").val($("#BillingNewAddress_Address2").val());
                    $("#ShippingNewAddress_City").val($("#BillingNewAddress_City").val());
                    $("#ShippingNewAddress_ZipPostalCode").val($("#BillingNewAddress_ZipPostalCode").val());
                    $("#ShippingNewAddress_PhoneNumber").val($("#BillingNewAddress_PhoneNumber").val());
                    $("#ShippingNewAddress_CountryId").val($("#BillingNewAddress_CountryId").val());
                    $("#ShippingNewAddress_StateProvinceId").val($("#BillingNewAddress_StateProvinceId").val());
                }
                else {
                    // get from db
                    $.ajax({
                        url: '@Url.Action("GetAddressById", "Checkout")',
                        type: "POST",
                        data: { "addressId": inpt },
                        "success": function (data) {
                            if (data != null) {
                                var vdata = data;
                                $("#ShippingNewAddress_FirstName").val(vdata.FirstName);
                                $("#ShippingNewAddress_LastName").val(vdata.LastName);

                                $("#ShippingNewAddress_Email").val(vdata.Email);


                                $("#ShippingNewAddress_Address1").val(vdata.Address1);
                                $("#ShippingNewAddress_Address2").val(vdata.Address2);
                                $("#ShippingNewAddress_City").val(vdata.City);


                                $("#ShippingNewAddress_ZipPostalCode").val(vdata.ZipPostalCode);
                                $("#ShippingNewAddress_PhoneNumber").val(vdata.PhoneNumber);

                                $("#ShippingNewAddress_CountryId").val(vdata.CountryId);

                                if (vdata.StateProvinceId != null)
                                    $("#ShippingNewAddress_StateProvinceId").val(vdata.StateProvinceId);
                            }
                        }
                    });
                    ///

                }
            }
        }*@

        $(document).ready(function () {
            function disableBack() { window.history.forward() }
            window.onload = disableBack();
            window.onpageshow = function (evt) { if (evt.persisted) disableBack() }

            $('#confirm-button').click(function () {
                if ($('input[name=paymentmethod]:checked').length <= 0) {
                    alert("Please select payment method");
                    return false;
                };
            });
        });



    </script>
}
