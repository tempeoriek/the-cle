@model CheckoutShippingAddressModel
@using Nop.Web.Models.Checkout;
@{

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
}



<div class="col-main">

    @using (Html.BeginRouteForm("CheckoutShippingAddress", FormMethod.Post))
    {

        <div class="row">

            <div class="col-sm-6">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h3>@T("Checkout.ShippingAddress")</h3>
                    </div>
                    <div class="panel-body">
                        <div class="checkout-blox">
                            @if (Model.AllowPickUpInStore)
                            {
                            <div class="section pickup-in-store">
                                <div class="selector">
                                    @{
                                        var pickupInStoreName = T("Checkout.PickUpInStore").Text;
                                        if (!String.IsNullOrEmpty(Model.PickUpInStoreFee))
                                        {
                                            pickupInStoreName = T("Checkout.PickUpInStoreAndFee", Model.PickUpInStoreFee).Text;
                                        }
                                    }
                                    @Html.CheckBoxFor(x => x.PickUpInStore)
                                    <label for="@Html.FieldIdFor(model => model.PickUpInStore)">@pickupInStoreName</label>
                                </div>
                                <div class="description">
                                    @T("Checkout.PickUpInStore.Description")
                                </div>
                                <script type="text/javascript">
                                    $(document).ready(function () {
                                        $("#@Html.FieldIdFor(model => model.PickUpInStore)").change(togglePickUpInStore);
                                        togglePickUpInStore();
                                    });

                                    function togglePickUpInStore() {
                                        if ($('#@Html.FieldIdFor(model => model.PickUpInStore)').is(':checked')) {
                                            $('#shipping-addresses-form').hide();
                                        } else {
                                            $('#shipping-addresses-form').show();
                                        }
                                    }
                                </script>
                            </div>
                            }

                            <div class="shipping-addresses" id="shipping-addresses-form">
                                @if (Model.ExistingAddresses.Count > 0)
                                {
                                    @*<strong>@T("Checkout.SelectShippingAddress")</strong>*@
                                    foreach (var item in Model.ExistingAddresses)
                                    {
                                        <div class="address-item">
                                            <ul class="address-box list-unstyled ">

                                                <li style="">
                                                    @item.FirstName @item.LastName

                                                    @if (item.CompanyEnabled && !String.IsNullOrEmpty(item.Company))
                                                    {
                                                        <br />@item.Company
                                                    }

                                                    @if (item.StreetAddressEnabled)
                                                    {
                                                        <br />@item.Address1
                                                    }
                                                    @if (item.StreetAddress2Enabled && !String.IsNullOrEmpty(item.Address2))
                                                    {
                                                        <br />@item.Address2
                                                    }
                                                    @if (item.CityEnabled || item.StateProvinceEnabled || item.ZipPostalCodeEnabled)
                                                    {
                                                        if (item.CityEnabled)
                                                        {
                                                            <br />@item.City

                                                        }
                                                        if (item.CityEnabled && (item.StateProvinceEnabled || item.ZipPostalCodeEnabled))
                                                        {
                                                            <text>,</text>
                                                        }
                                                        @*@if (item.StateProvinceEnabled)
                {
                 @item.StateProvinceName
                 }*@
                                                    if (item.ZipPostalCodeEnabled)
                                                    {
                                                        @item.ZipPostalCode
                                                        }
                                                    }
                                                    @if (item.CountryEnabled && !String.IsNullOrEmpty(item.CountryName))
                                                    {
                                                        <br />@item.CountryName
                                                    }

                                                    @if (!String.IsNullOrEmpty(item.FormattedCustomAddressAttributes))
                                                    {
                                                        <br />
                                                        @Html.Raw(item.FormattedCustomAddressAttributes)
                                                    }


                                                    <br />@item.Email
                                                    <br />P: @item.PhoneNumber

                                                    @*
                                                        @if (item.FaxEnabled)            {
                                                            <br />
                                                            <label>@T("Address.Fields.FaxNumber"):</label>
                                                            <span>@item.FaxNumber</span>
                                                    }*@


                                                </li>


                                               
                                            </ul>
                                            <div class="select-button">
                                                <input type="button" value="@T("Checkout.ShipToThisAddress")" class="btn btn-default" onclick="setLocation('@Url.RouteUrl("CheckoutSelectShippingAddress", new { addressid = item.Id })') " />
                                                <br /><br />
                                            </div>
                                        </div>
                                    }
}

                              
                            </div>
                        </div>
                    </div>
                </div>
            </div>




            <div class="col-sm-6">

                <div class="panel panel-info">
                    <div class="panel-heading">
                        @if (Model.ExistingAddresses.Count > 0)
                        {
                            <h3>@T("Checkout.OrEnterNewAddress")</h3>
                        }
                        else
                        {
                            <h3>@T("Checkout.EnterShippingAddress")</h3>
                        }


                    </div>
                    <div class="panel-body">
                        <div class="checkout-blox">
                                <!-- -->
                            <div class="enter-address">
                                @{
                                    var validationSummary = Html.ValidationSummary(true);
                                }

                                @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                                {
                                    <div class="message-error">@validationSummary</div>
                                }
                                @{
                                    var dataDictAddress = new ViewDataDictionary();
                                    //Merge ModelState (required for validation)
                                    dataDictAddress.ModelState.Merge(ViewData.ModelState);
                                    dataDictAddress.TemplateInfo.HtmlFieldPrefix = "NewAddress";
                                    @Html.Partial("_CreateOrUpdateAddress", Model.NewAddress, dataDictAddress)
                                }
                            </div>



                            <div class="buttons mt-default" style="text-align:right;">
                                @*<input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn btn-default" />*@
                                <input type="submit" name="nextstep" value="To Shipping Method" class="btn btn-default" />
                            </div>
                            <!-- -->
                        </div>
                    </div>
                </div>


            </div>


        </div>

                                        }


</div>


@*@Html.Action("CheckoutProgress", "Checkout", new { step = CheckoutProgressStep.Address })*@

