@model SubmitReturnRequestModel
@using Nop.Web.Models.Order;
@{

    //title
    Html.AddTitleParts(T("PageTitle.ReturnItems").Text);
}
<div class="col-main mijnaccount">
    <div class="page return-request-page">
        <div class="page-title">
            <h1>@string.Format(T("ReturnRequests.Title").Text, Model.OrderId)</h1>
        </div>
        <div class="page-body">
            @if (!String.IsNullOrEmpty(Model.Result))
            {
                <div class="result">
                    @Model.Result
                </div>}
            else
            {
                using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="section">
                        <div class="title">
                            <strong>@T("ReturnRequests.SelectProduct(s)")</strong>
                        </div>
                        <div class="table-wrapper">
                            <table class="table basic productRows">
                                <thead>
                                    <tr>
                                        <th class="product">
                                            @T("ReturnRequests.Products.Name")
                                        </th>
                                        <th class="unit-price">
                                            @T("ReturnRequests.Products.Price")
                                        </th>
                                        <th class="quantity" style="text-align:right">
                                            @T("ReturnRequests.Products.Quantity")
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr>
                                            <td class="product">
                                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                                @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                                {
                                                    <div class="attributes">
                                                        @Html.Raw(item.AttributeInfo)
                                                    </div>
                                                }
                                            </td>
                                            <td class="unit-price">
                                                @item.UnitPrice
                                            </td>
                                            <td class="quantity">
                                                <select class="form-control" name="quantity@(item.Id)" style="">
                                                    @for (int i = 0; i <= item.Quantity; i++)
                                                    {
                                                        <option value="@(i)">@(i)</option>
                                                    }
                                                </select>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="fieldset">
                        <div class="title">
                            <strong>@T("ReturnRequests.WhyReturning")</strong>
                        </div>
                        <div class="form-fields">
                            <div class="inputs" style="margin-bottom:10px">
                                @{
                                    var reasonsSelectList = Model.AvailableReturnReasons.Select(x => new SelectListItem
                                    {
                                        Text = x.Name,
                                        Value = x.Id.ToString()
                                    }).ToList();
                                }
                                @Html.LabelFor(model => model.ReturnRequestReasonId, new { }, ":")
                                @Html.DropDownListFor(model => model.ReturnRequestReasonId, reasonsSelectList, new { @class = "form-control" })
                            </div>
                            <div class="inputs">
                                @{
                                    var actionsSelectList = Model.AvailableReturnActions.Select(x => new SelectListItem
                                    {
                                        Text = x.Name,
                                        Value = x.Id.ToString()
                                    }).ToList();
                                }
                                @Html.LabelFor(model => model.ReturnRequestActionId, new { }, ":")

                                @Html.DropDownListFor(model => model.ReturnRequestActionId, actionsSelectList, new { @class = "form-control" })

                            </div>
                            <div class="inputs">
                                @Html.LabelFor(model => model.Comments, new { }, ":")
                                @Html.TextAreaFor(model => model.Comments, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Comments)
                            </div>
                        </div>
                    </div>
                    <div class="buttons">
                        <input type="submit" name="submit-return-request" class="btn btn-default btn-width submit-return-request-button" value="@T("ReturnRequests.Submit")" />
                    </div>
                                        }
                                    }
        </div>
    </div>
</div>