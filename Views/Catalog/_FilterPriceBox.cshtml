@model CatalogPagingFilteringModel.PriceRangeFilterModel
@using Nop.Web.Models.Catalog;
@{
    var selectedItem = Model.Items.FirstOrDefault(x => x.Selected);
}
@helper FormatPriceRangeText(CatalogPagingFilteringModel.PriceRangeFilterItem filterItem)
{
    string rangeText = "";
    if (String.IsNullOrWhiteSpace(filterItem.From))
    {
        rangeText = string.Format(T("Filtering.PriceRangeFilter.Under").Text, string.Format("<span class=\"PriceRange\">{0}</span>", filterItem.To));
    }
    else if (String.IsNullOrWhiteSpace(filterItem.To))
    {
        rangeText = string.Format(T("Filtering.PriceRangeFilter.Over").Text, string.Format("<span class=\"PriceRange\">{0}</span>", filterItem.From));
    }
    else
    {
        rangeText = string.Format("<span class=\"PriceRange\">{0}</span> - <span class=\"PriceRange\">{1}</span>", filterItem.From, filterItem.To);
    }
    <text>@Html.Raw(rangeText)</text>
}


<h4>@T("Filtering.PriceRangeFilter")</h4>

@if (Model.Items.Any())
{
    foreach (var item in Model.Items)
    {
        var price_tag = item.To == null ? 10000000 : 
            item.To == "IDR 1,000,000" ? 1000000 :
            item.To == "IDR 500,000" ? 500000 : 200000;
        var price_min = item.To == null ? 1000000 : 
            item.To == "IDR 1,000,000" ? 500000 :
            item.To == "IDR 500,000" ? 200000 : 0;
        <div class="radio-alternate">
            <a style="cursor: pointer;" name="SortProduct" data-price="@price_tag" data-price-min="@price_min" id="checkbox-price">@FormatPriceRangeText(item)</a>
        </div>
    }
    <div class="radio-alternate-new">
        <p class="removeshowfilter-price" style="cursor: pointer;"></p>
    </div>
}