@model CategoryNavigationModel
@using Nop.Web.Models.Catalog;



@functions{
    public bool BreadCrumbContainsCurrentCategoryId(CategorySimpleModel category)
    {
        if (Model.CurrentCategoryId == 0)
            return false;

        if (category.Id == Model.CurrentCategoryId)
            return true;

        foreach (var subCategory in category.SubCategories)
        {
            if (BreadCrumbContainsCurrentCategoryId(subCategory))
            {
                return true;
            }
        }

        return false;
    }
}

@helper RenderCategoryLineSidebar(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }

    <li class="listItemB"><a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" class="@liClass"> <img alt="icon" src="~/Content/Images/dot menu.png"> @category.Name</a></li>

    if (category.Id == Model.CurrentCategoryId ||
        category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0)
    {
        if (category.SubCategories.Count > 0)
        {
            <ul class="sublist">
                @foreach (var subCategory in category.SubCategories)
                {
                    @RenderCategoryLine(subCategory)
                }
            </ul>
        }
    }
}


@*untuk yang category shop*@
@helper RenderCategoryLine(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }

    <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" class="@liClass dropdown-item"> @category.Name</a>
}

@*untuk yang category collection*@ 
@helper RenderCategoryLineCollection(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }

    <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" class="@liClass dropdown-item"> @category.Name</a>
}


@helper RenderCategoryMobile(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }
    <li><a href="#ddl1-@category.SeName">@category.Name</a></li>
  
}

@helper RenderCategoryMobileCollection(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }
     <li><a href="#ddl1-@category.SeName">@category.Name</a></li>
}


@{
    var liCollapse = (Model.CurrentCategoryId > 0) ? "" : "collapse";
    var parentId = (ViewBag.isMobile != null) ? "phmenu-mobile" : "phmenu";
    var divId = (ViewBag.isMobile != null) ? "shop-mobile" : "shop";

}







@* mobile *@
@{
    if (!Model.isSidebar)
    {
        if (Model.Categories.Count > 0)
        {
            if (Model != null)
            {
                <div class="d-block d-md-none headerparent-slider-mobile" style="">
                    <div class="headerchild-slider-mobile" style="">
                        <div class="d-flex" style="height: 100%;">
                            @{
                                var lstCategories = new string[] { "for-you", "for-them" };
                                
                                foreach(var category in Model.Categories) {
                                    if (lstCategories.Contains(category.SeName)) {
                                        <div class="text-center" style="width: 100px">
                                            <div class="m-0 d-flex justify-content-center align-items-center" style="height: 100%">
                                                <a id="categorymobile-@category.Id" class="m-0 subheader-text" style="">
                                                    @category.Name
                                                </a>
                                                <img src="~/Themes/v1/Content/images/arrow_down.png" alt="" srcset="" class="" style="width: 8px; height: auto; margin-left: 5px;" />
                                            </div>
                                        </div>
                                    }

                                }

                                <div class="text-center" style="width: 200px">
                                    <div class="m-0 d-flex justify-content-center align-items-center" style="height: 100%">
                                        <a id="categorymobile-423" href="~/byob/step1" class="m-0 subheader-text" style="">Build Your Own Box</a>
                                        @* <img src="~/Themes/v1/Content/images/arrow_down.png" alt="" srcset="" class="" style="width: 8px; height: auto; margin-left: 5px;" /> *@
                                    </div>
                                </div>

                                <div class="text-center" style="width: 100px">
                                    <div class="m-0 d-flex justify-content-center align-items-center" style="height: 100%">
                                        <a id="categorymobile-424" href="~/about" class="m-0 subheader-text" style="">About</a>
                                        @* <img src="~/Themes/v1/Content/images/arrow_down.png" alt="" srcset="" class="" style="width: 8px; height: auto; margin-left: 5px;" /> *@
                                    </div>
                                </div>

                                <div class="text-center" style="width: 100px">
                                    <div class="m-0 d-flex justify-content-center align-items-center" style="height: 100%">
                                        <a id="categorymobile-425" href="~/blog" class="m-0 subheader-text" style="">Blog</a>
                                        @* <img src="~/Themes/v1/Content/images/arrow_down.png" alt="" srcset="" class="" style="width: 8px; height: auto; margin-left: 5px;" /> *@
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                foreach(var category in Model.Categories) {
                    if (category.SubCategories.Any()) {
                        <div id="subcategorymobile-@category.Id" class="d-block d-md-none sub-category-mobile" style="display: none !important;">
                            <div class="mt-2 mb-2" style="font-size: 12px; margin-left: 10%;">
                                <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" style="text-decoration: none;">Shop All</a>
                            </div>
                            @foreach(var subcategory in category.SubCategories) {
                                <div class="mt-2 mb-2" style="font-size: 12px; margin-left: 10%;">
                                    @if (subcategory.SeName == "brands") {
                                        <a href="~/catalog/allbrands" style="text-decoration: none;">
                                            @subcategory.Name
                                        </a>
                                    }
                                    else {
                                        <a href="@Url.RouteUrl("Category", new { SeName = subcategory.SeName })" style="text-decoration: none;">
                                            @subcategory.Name
                                        </a>
                                    }
                                </div>
                            }
                        </div>
                    }
                }
            }
        }
    }
}




<script>
    //click header category
    $("a[id^='categorymobile-']" ).click(function() {
        var id = parseInt(this.id.replace("categorymobile-", ""), 10);

        //bold text header
        $("a[id^='categorymobile-']").each(function() {
            var id_drop = parseInt(this.id.replace("categorymobile-", ""), 10);
            if (id_drop != id) {
                $("#categorymobile-" + id_drop).css("font-weight", "normal");
                $("#subcategorymobile-" + id_drop).css('cssText', 'width: 170px; display: none !important');
            } else {
                $("#categorymobile-" + id_drop).css("font-weight", "bold");
                $("#subcategorymobile-" + id_drop).css('cssText', 'width: 170px; display: block !important');
            }
        });
    });


    $(document).mouseup(function(e) 
    {
        var container = $(".sub-category-mobile");
        // if the target of the click isn't the container nor a descendant of the container
        if (!container.is(e.target) && container.has(e.target).length === 0) 
        {
            $("div[id^='subcategorymobile-']").each(function() {
                var id = parseInt(this.id.replace("subcategorymobile-", ""), 10);
                $("#categorymobile-" + id).css("font-weight", "normal");
                $("#subcategorymobile-" + id).css('cssText', 'width: 170px; display: none !important');
            });
        }
    });
    var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
	@* console.log(model); *@
</script>