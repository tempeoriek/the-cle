@model CategoryNavigationModel
@using Nop.Web.Models.Catalog;



@functions{
    public bool BreadCrumbContainsCurrentCategoryId(CategorySimpleModel category)
    {
        if (Model.CurrentCategoryId == 0)
            return false;

        if (category.Id == Model.CurrentCategoryId)
            return true;

        foreach (var subCategory in category.SubCategories)
        {
            if (BreadCrumbContainsCurrentCategoryId(subCategory))
            {
                return true;
            }
        }

        return false;
    }
}

@helper RenderCategoryLineSidebar(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }

    <li class="listItemB"><a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" class="@liClass"> <img alt="icon" src="~/Content/Images/dot menu.png"> @category.Name</a></li>

    if (category.Id == Model.CurrentCategoryId ||
        category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0)
    {
        if (category.SubCategories.Count > 0)
        {
            <ul class="sublist">
                @foreach (var subCategory in category.SubCategories)
                {
                    @RenderCategoryLine(subCategory)
                }
            </ul>
        }
    }
}


@*untuk yang category shop*@
@helper RenderCategoryLine(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }

    <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" class="@liClass dropdown-item"> @category.Name</a>
}

@*untuk yang category collection*@
@helper RenderCategoryLineCollection(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }

    <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" class="@liClass dropdown-item"> @category.Name</a>
}


@helper RenderCategoryMobile(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }
    <li><a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">@category.Name</a></li>

}

@helper RenderCategoryMobileCollection(CategorySimpleModel category)
{
    bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
    bool last = category.Id == Model.CurrentCategoryId;
    string liClass = active ? "active" : "inactive";

    if (last)
    {
        liClass += " last";
    }
    <li><a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">@category.Name</a></li>
}


@{
    var liCollapse = (Model.CurrentCategoryId > 0) ? "" : "collapse";
    var parentId = (ViewBag.isMobile != null) ? "phmenu-mobile" : "phmenu";
    var divId = (ViewBag.isMobile != null) ? "shop-mobile" : "shop";


    var lstCategories = new string[] { "for-you", "for-them" };


}


@*desktop*@

@{

    if (!Model.isSidebar)
    {
        if (Model.Categories.Count > 0)
        {

            if (Model != null)
            {
                //desktop
                foreach (var category in Model.Categories)
                {

                    if (lstCategories.Contains(category.SeName))
                    {
                        <li class="nav-item dropdown d-none d-md-block p-0">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown-@category.Id" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@category.Name</a>
                            @if (category.SubCategories.Any())
                            {
                                var showShopAll = true;

                                <div class="dropdown-menu" aria-labelledby="navbarDropdown-@category.Id">

                                    <div class="container" style="padding-top:15px; padding-bottom:15px;">
                                        <div class="row">
                                            @foreach (var subcat in category.SubCategories)
                                            {
                                                <div class="col-2" style="">
                                                    @if (showShopAll)
                                                    {
                                                        <a class="dropdown-item  subcat-header" href="@Url.RouteUrl("Category", new { SeName = category.SeName })" style="margin-bottom:6px;">Shop All</a>
                                                        showShopAll = false;
                                                    }

                                                    @if (subcat.SeName == "brands") {
                                                        <a class="dropdown-item  subcat-header" href="~/catalog/allbrands">@subcat.Name</a>
                                                    }
                                                    else {
                                                        <a class="dropdown-item  subcat-header" href="@Url.RouteUrl("Category", new { SeName = subcat.SeName })">@subcat.Name</a>
                                                    }
                                                    <ul class="list-unstyled lst-sub-sub-category">
                                                        @{

                                                            var ubound = subcat.SubCategories.Count;
                                                            if (ubound <= 4)
                                                            {
                                                                foreach (var s in subcat.SubCategories)
                                                                {
                                                                    <li><a class="" href="@Url.RouteUrl("Category", new { SeName = s.SeName })">@s.Name</a></li>
                                                                }
                                                            }
                                                            else
                                                            {

                                                                for (int n = 0; n <= 4; n++)
                                                                {
                                                                    var s = subcat.SubCategories[n];
                                                                    <li><a class="" href="@Url.RouteUrl("Category", new { SeName = s.SeName })">@s.Name</a></li>
                                                                }

                                                                if (subcat.Name.Equals("brands", StringComparison.OrdinalIgnoreCase))
                                                                {
                                                                    <li><a class="" style="color: #C1C1C1;" href="~/catalog/allbrands">See more</a></li>
                                                                }
                                                                else
                                                                {
                                                                    <li>
                                                                        <div class="accordion accordion-flush"
                                                                             id="accMore-@subcat.Id" style="border-top:none; cursor:pointer;">
                                                                            <div class="accordion-item">
                                                                                <div class="accordion-header" id="flush-headingOne">
                                                                                    <a class="collapsed"
                                                                                       data-bs-toggle="collapse"
                                                                                       data-bs-target="#flush-collapse-@subcat.Id"
                                                                                       aria-expanded="false" aria-controls="flush-collapse-@subcat.Id">See more</a>
                                                                                </div>
                                                                                <div id="flush-collapse-@subcat.Id"
                                                                                     class="accordion-collapse collapse"
                                                                                     aria-labelledby="flush-heading-@subcat.Id"
                                                                                     data-bs-parent="#accMore-@subcat.Id">

                                                                                    @for (int n = 5; n < ubound; n++)
                                                                                    {
                                                                                        var s = subcat.SubCategories[n];
                                                                                        <a class="" href="@Url.RouteUrl("Category", new { SeName = s.SeName })">@s.Name</a><br />
                                                                                    }
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </li>

                                                                }

                                                            }
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                             }
                            </li>
                        }


                    }

                }
            }

        }
        else
        {
            @*sidebar*@
            if (Model.Categories.Count > 0)
            {
                <ul class="list-unstyled mm-category">
                    <li><a href="~/new-arrivals">New Arrivals</a></li>

                    @foreach (var category in Model.Categories)
                    {
                        if (category.SubCategories.Any())
                        {
                            <li>
                                <a class="" data-toggle="collapse" href="#mm-category-@category.Id" role="button" aria-expanded="false" aria-controls="mm-category-@category.Id">@category.Name.ToUpper()</a>
                                <ul class="mm-subcategory list-unstyled collapse" id="mm-category-@category.Id">
                                    @if (category.SubCategories.Any())
                                    {
                                        <li><a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">All</a></li>

                                        foreach (var subcat in category.SubCategories)
                                        {
                                            <li>
                                                <a href="@Url.RouteUrl("Category", new { SeName = subcat.SeName })">@subcat.Name.ToUpper()</a>
                                                @if (subcat.SubCategories.Any())
                                                {
                                                    <ul class="mm-subsubcategory list-unstyled">
                                                        @foreach (var subsubcat in subcat.SubCategories)
                                                        {
                                                            <li><a href="@Url.RouteUrl("Category", new { SeName = subsubcat.SeName })">@subsubcat.Name.ToUpper()</a></li>
                                                        }
                                                    </ul>
                                                }
                                            </li>
                                        }
                                    }

                                </ul>
                            </li>
                        }
                        else
                        {
                            <li><a href="@Url.RouteUrl("Category", new { SeName = category.SeName })">@category.Name.ToUpper()</a></li>

                        }
                    }

                </ul>

            }

        }
}

<script>
    var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
	//console.log(model);
</script>