@model CategoryModel
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;

@{

    //Layout = "~/Views/Shared/_LayoutThree.cshtml";

    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}


@{
    var pg_i = 0;

    var title = Model.Name;
    if (Model.Name.Equals("categories", StringComparison.OrdinalIgnoreCase))
    {
        title = "All Categories";
    }

    <style>
        .menu_shop {
            display: block !important;
        }
    </style>

    @*<div class="row d-flex justify-content-end">
            <div class="col-10 mb-4 d-none d-sm-block"><h1 class="cataloque-name">@title</h1></div>
            <div class="col-12 mb-4 d-block d-sm-none"><h1 class="cataloque-name">@title</h1></div>
        </div>*@


    //current category ID
    int currentCategoryId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("category", StringComparison.InvariantCultureIgnoreCase))
    {
        currentCategoryId = Convert.ToInt32(Url.RequestContext.RouteData.Values["categoryId"].ToString());
    }


    //current product ID
    int currentProductId = 0;
    if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("product", StringComparison.InvariantCultureIgnoreCase) &&
        Url.RequestContext.RouteData.Values["action"].ToString().Equals("productdetails", StringComparison.InvariantCultureIgnoreCase))
    {
        currentProductId = Convert.ToInt32(Url.RequestContext.RouteData.Values["productId"].ToString());
    }





    @*<div class="col-main-sml mt-3">
        @Html.Action("CategoryNavigation", "Catalog", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId, isSidebar = false })
    </div>*@

<div class="container mt-5 catalogues">

    @if (Model.Products.Any())
    {
    <div class="mb-5">
        @*@using (Ajax.BeginForm("EmployeeMaster", "Home", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divEmp" }))
        {

        }*@


            <form id="filter-selected-form" class="login-form" method="post" action="~/@Model.SeName">
                @Html.AntiForgeryToken()
                <div class="byob-filter">
                    <div class="row">
                        <div class="col-12">
                            <a data-toggle="collapse" href="#collapseFilter" role="button" aria-expanded="false" aria-controls="collapseFilter" class="filter__toogle collapsed">Filter</a>

                        </div>
                    </div>
                    <div class="collapse" id="collapseFilter">
                        <div class="filter_panel">
                            <div class="row">
                                <div class="col-12 col-lg-3">@Html.Partial("_CategorySelectors", Model, new ViewDataDictionary())</div>
                                <div class="col-12 col-lg-3">@Html.Partial("_ColorSelectors", Model.AvailableColors, new ViewDataDictionary())</div>
                                <div class="col-12 col-lg-3">@Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())</div>
                                <div class="col-12 col-lg-3">@Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())</div>
                            </div>
                            @*<div class="row">
                                <div class="col-12 text-center mt-3">
                                    <input type="submit" value="Apply" class="btn btn-default" style="min-width:150px;" />
                                </div>
                            </div>*@
                        </div>


                    </div>


                </div>
            </form>
    </div>



        <div class="row catalogue-img">
            @foreach (var item in Model.Products)
            {
                var colCss = "col-6 col-sm-6 col-md-3 col-lg-3";
                <div class="@colCss catalog-line">
                    @Html.Partial("_ProductBox", item)
                </div>


            }
        </div>
    }
    else
    {
        <div class="col-main-slim mt-5"><h3>We're still preparing the collection. Please stay tuned.</h3></div>

    }

    <div class="gap"></div>


    <div class="">
        @{
            var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
            if (!pager.IsEmpty())
            {
            <div class="pager">@pager</div>
            }
       }
    </div>
  

</div>
}





@section scripts{

    @*<script type="text/javascript" src="~/Scripts/app/exif/exif.js"></script>
        <script>
                //"use strict";
                //window.onload=getExif;

                function getExif() {
                    var img1 = document.getElementById("img1");
                    EXIF.getData(img1, function() {
                        var make = EXIF.getTag(this, "Make");
                        var model = EXIF.getTag(this, "Model");
                        var makeAndModel = document.getElementById("makeAndModel");
                        makeAndModel.innerHTML = `${make} ${model}`;
                    });
                }
        </script>

            <script>

                function imageOrientation(src) {

                    var orientation,
                    img = new Image();
                    img.src = src;

                    if (img.naturalWidth > img.naturalHeight) {
                        orientation = 'landscape';
                    } else if (img.naturalWidth < img.naturalHeight) {
                        orientation = 'portrait';
                    } else {
                        orientation = 'even';
                    }

                    return orientation;

                }
            </script>*@

    <script>
        $(document).ready(function () {
            $('.shop__filter').on('change', function () {
               window.location = "/" +$(this).val();
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            $('.radio-alternate').change(function () {
                $('#filter-selected-form').submit();
                return false;
            });
        });
    </script>

    
}

